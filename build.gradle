plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'guru.qa'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.24.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.24.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation('org.seleniumhq.selenium:selenium-java:4.12.1')
    testImplementation('com.codeborne:selenide:6.16.1')
    implementation group: 'io.qameta.allure', name: 'allure-selenide', version: '2.24.0'

    testImplementation('org.slf4j:slf4j-simple:2.0.5')
    testImplementation('com.github.javafaker:javafaker:1.0.2')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'


    //implementation group: 'net.datafaker', name: 'datafaker', version: '1.0.2'

}


tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task run_jenkins_remote(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}

task run_jenkins_smoke(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}
task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("local")
    }
}

task property_test(type: Test) {
        useJUnitPlatform {
            includeTags("properties")
        }
    }

    task hello_test(type: Test) {
        useJUnitPlatform {
            includeTags("hello")
        }
    }

